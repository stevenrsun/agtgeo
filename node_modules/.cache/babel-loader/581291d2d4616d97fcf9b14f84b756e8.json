{"ast":null,"code":"var _jsxFileName = \"/home/steven/Documents/agtgeo/src/pages/technology.js\";\nimport React, { Component } from 'react';\nimport { TechnologyItem } from '../components/techItem.js';\nimport { PageNav } from '../components/pageNav.js';\nimport { Footer } from '../components/footer.js';\nimport { Link } from 'react-router-dom';\nexport class Technology extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // just as in news.js, id corresponds to the number displayed in url\n      // format must be either 'list' or 'text' exactly:\n      // list: use key list equal to an array of strings to be displayed in a vertical, bulleted list under the card title\n      // text: the entire string will be displayed and wrap around per line according to the dimensions of the containing card\n      // the body key corresponds to the text that will appear in each instance page (after clicking more info on a card)\n      // any additional keys can be accessed in src/components/techItem.js using this.props.info.keyName or this.props.info['keyName']\n      technology: [{\n        format: 'list',\n        category: 'tech',\n        id: 11,\n        title: '5-D INTERPOLATION',\n        list: ['Global-Local-Hybrid Multi-resolution approach', 'Anti-leakage and anti-aliasing', 'Fills large data gaps'],\n        body: 'Body text to be added.'\n      }, {\n        format: 'list',\n        category: 'tech',\n        id: 10,\n        title: 'DIFFRACTION IMAGING',\n        list: ['Double stage reflection energy suppression'],\n        body: 'Body text to be added.'\n      }, {\n        format: 'list',\n        category: 'tech',\n        id: 9,\n        title: 'FORWARD MODELING',\n        list: ['Finite Element and Finite Difference', 'Surface/Seafloor topography', 'Variable gridding', 'Full physics (Acoustic/Elastic, ISO/VTI/TTI/Orthorhombic, Q)', 'VSP/Sea floor multi-component recording'],\n        body: 'Body text to be added.'\n      }, {\n        format: 'list',\n        category: 'tech',\n        id: 8,\n        title: '3D TOMOGRAPHIC VELOCITY MODEL BUILDING WITH Q, ORTHORHOMBIC',\n        list: ['High-resolution tomography for small velocity anomalies', 'Superior fault definition and improved image', 'Global automatic residual depth move-out picking', 'Geology structural conformed inversion', 'Sub-salt velocity update with RTM dense angle gathers or shot index gathers'],\n        body: 'Body text to be added.'\n      }, {\n        format: 'list',\n        category: 'tech',\n        id: 7,\n        title: 'PREPROCESSING',\n        list: ['Internal time processing package along with Paradigm/Echos'],\n        body: 'Body text to be added.'\n      }, {\n        format: 'list',\n        category: 'tech',\n        id: 6,\n        title: '3D KIRCHHOFF DEPTH & TIME MIGRATION',\n        list: ['Q, HTI/VTI, Orthorhombic', 'Designed for large 3D datasets and high resolution imaging', 'Large scale seismic modeling capability'],\n        body: 'Body text to be added.'\n      }, {\n        format: 'list',\n        category: 'tech',\n        id: 5,\n        title: 'FULL WAVEFORM INVERSION (PATENTED)',\n        list: ['Beat-Tone FWI algorithm that does not require low-frequency data', 'Insensitive to source estimation error and data measurement error', 'Fast convergence rate (efficient computation of second-order derivative) ', 'Highly automatic algorithm, minimum user interaction', 'Optimized workflows designed for various categories of seismic data'],\n        body: 'Body text to be added.'\n      }, {\n        format: 'list',\n        category: 'tech',\n        id: 4,\n        title: '3D RTM, QRTM & RTM ANGLE GATHERS (ISO/VTI/TTI)',\n        list: ['AVO compliant offset and angle gathers, Finite-difference Q-RTM (patent pending) which is 5x faster than traditional methods', 'Affordable high frequency (e.g. 50Hz) 3D RTM angle gather', 'Output every location in offset or angle domain', 'Azimuthal Imaging'],\n        body: 'Body text to be added.'\n      }],\n      publications: [{\n        format: 'list',\n        category: 'publication',\n        id: 3,\n        title: 'Research & Development',\n        list: ['40% of all capital is committed to R&D', 'Customer Focused Results - technology roadmap is adaptable', 'Rapid Technology Implementation - i.e. AVO Compliant RTM Gathers, Q', 'Nimble; technology roadmap adaptable to clients\\' needs'],\n        body: 'Body text to be added.'\n      }],\n      // publications\n      numTechItems: 8,\n      // number of tech entries to be displayed per page\n      page: 0,\n      title: 'TECHNOLOGIES' // convert numTechItems at a time news entries into NewsItem components\n\n    };\n\n    this.formatTech = () => {\n      var techJSX = [];\n      let i = this.state.page * this.state.numTechItems;\n\n      while (i < this.state.technology.length && i < this.state.page * this.state.numTechItems + 6) {\n        let dict = this.state.technology[i];\n        techJSX.push(React.createElement(TechnologyItem, {\n          info: dict,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }));\n        i++;\n      }\n\n      if (techJSX.length > 0) return techJSX;else return React.createElement(\"span\", {\n        class: \"txt subheading ml-2 mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Nothing on this page.\");\n    };\n\n    this.incrementPage = () => {\n      const page = this.state.page + 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.incrementPageTwice = () => {\n      const page = this.state.page + 2;\n      this.setState({\n        page\n      });\n    };\n\n    this.decrementPage = () => {\n      const page = this.state.page - 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.goFirstPage = () => {\n      const page = 0;\n      this.setState({\n        page\n      });\n    };\n\n    this.goLastPage = () => {\n      const page = Math.ceil(this.state.technology.length / this.state.numTechItems) - 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        technology: this.state.publications\n      });\n    };\n\n    this.applyFilter = num => {\n      var newTitle = '';\n      var newList = [];\n\n      if (num == 0) {\n        newTitle = 'PUBLICATIONS';\n        newList = this.state.publications;\n      } else if (num == 1) {\n        newTitle = 'TECHNOLOGIES';\n        newList = this.state.technology;\n      }\n\n      this.setState({\n        title: newTitle,\n        technology: newList,\n        page: 0\n      });\n    };\n  }\n\n  render() {\n    var techFormatted = this.formatTech();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container-fluid border border-grey\",\n      style: {\n        width: '80vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-2 border-right text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      class: \"txt heading\",\n      style: {\n        fontSize: 25,\n        fontWeight: 'bold',\n        color: '#1cb7e6'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Filter by:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Link, {\n      class: \"subheading\",\n      onClick: () => this.applyFilter(0),\n      style: {\n        fontSize: 20,\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Publications\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Link, {\n      class: \"subheading\",\n      onClick: () => this.applyFilter(1),\n      style: {\n        fontSize: 20,\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Technologies\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"heading ml-2 mt-1\",\n      style: {\n        fontSize: 35,\n        color: '#585c5e'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"div\", {\n      class: \"container-fluid\",\n      style: {\n        width: '50vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, techFormatted.length >= 1 + this.state.page * this.state.numTechItems ? techFormatted[0 + this.state.page * this.state.numTechItems] : null, techFormatted.length >= 2 + this.state.page * this.state.numTechItems ? techFormatted[1 + this.state.page * this.state.numTechItems] : null), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, techFormatted.length >= 3 + this.state.page * this.state.numTechItems ? techFormatted[2 + this.state.page * this.state.numTechItems] : null, techFormatted.length >= 4 + this.state.page * this.state.numTechItems ? techFormatted[3 + this.state.page * this.state.numTechItems] : null), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, techFormatted.length >= 5 + this.state.page * this.state.numTechItems ? techFormatted[4 + this.state.page * this.state.numTechItems] : null, techFormatted.length >= 6 + this.state.page * this.state.numTechItems ? techFormatted[5 + this.state.page * this.state.numTechItems] : null), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, techFormatted.length >= 7 + this.state.page * this.state.numTechItems ? techFormatted[6 + this.state.page * this.state.numTechItems] : null, techFormatted.length >= 8 + this.state.page * this.state.numTechItems ? techFormatted[7 + this.state.page * this.state.numTechItems] : null))))), React.createElement(\"div\", {\n      class: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(PageNav, {\n      decrementPage: this.decrementPage,\n      incrementPage: this.incrementPage,\n      goFirstPage: this.goFirstPage,\n      goLastPage: this.goLastPage,\n      page: this.state.page,\n      incrementPageTwice: this.incrementPageTwice,\n      lastPage: Math.ceil(this.state.technology.length / this.state.numTechItems),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/steven/Documents/agtgeo/src/pages/technology.js"],"names":["React","Component","TechnologyItem","PageNav","Footer","Link","Technology","state","technology","format","category","id","title","list","body","publications","numTechItems","page","formatTech","techJSX","i","length","dict","push","incrementPage","setState","incrementPageTwice","decrementPage","goFirstPage","goLastPage","Math","ceil","reset","applyFilter","num","newTitle","newList","render","techFormatted","width","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {TechnologyItem} from '../components/techItem.js';\nimport {PageNav} from '../components/pageNav.js';\nimport {Footer} from '../components/footer.js';\nimport {Link} from 'react-router-dom';\n\nexport class Technology extends Component {\n    state = { \n        // just as in news.js, id corresponds to the number displayed in url\n\n        // format must be either 'list' or 'text' exactly:\n        // list: use key list equal to an array of strings to be displayed in a vertical, bulleted list under the card title\n        // text: the entire string will be displayed and wrap around per line according to the dimensions of the containing card\n\n        // the body key corresponds to the text that will appear in each instance page (after clicking more info on a card)\n        // any additional keys can be accessed in src/components/techItem.js using this.props.info.keyName or this.props.info['keyName']\n        technology: [\n            { format: 'list', category: 'tech', id: 11, title: '5-D INTERPOLATION', list: ['Global-Local-Hybrid Multi-resolution approach', 'Anti-leakage and anti-aliasing', 'Fills large data gaps'], body: 'Body text to be added.'},\n            { format: 'list', category: 'tech', id: 10, title: 'DIFFRACTION IMAGING', list: ['Double stage reflection energy suppression'], body: 'Body text to be added.'},\n            { format: 'list', category: 'tech', id: 9, title: 'FORWARD MODELING', list: ['Finite Element and Finite Difference', 'Surface/Seafloor topography', 'Variable gridding', 'Full physics (Acoustic/Elastic, ISO/VTI/TTI/Orthorhombic, Q)', 'VSP/Sea floor multi-component recording'], body: 'Body text to be added.'},\n            { format: 'list', category: 'tech', id: 8, title: '3D TOMOGRAPHIC VELOCITY MODEL BUILDING WITH Q, ORTHORHOMBIC', list: ['High-resolution tomography for small velocity anomalies', 'Superior fault definition and improved image', 'Global automatic residual depth move-out picking', 'Geology structural conformed inversion', 'Sub-salt velocity update with RTM dense angle gathers or shot index gathers'], body: 'Body text to be added.'},\n            { format: 'list', category: 'tech', id: 7, title: 'PREPROCESSING', list: ['Internal time processing package along with Paradigm/Echos'], body: 'Body text to be added.'},\n            { format: 'list', category: 'tech', id: 6, title: '3D KIRCHHOFF DEPTH & TIME MIGRATION', list: ['Q, HTI/VTI, Orthorhombic', 'Designed for large 3D datasets and high resolution imaging', 'Large scale seismic modeling capability'], body: 'Body text to be added.'},\n            { format: 'list', category: 'tech', id: 5, title: 'FULL WAVEFORM INVERSION (PATENTED)', list: ['Beat-Tone FWI algorithm that does not require low-frequency data', 'Insensitive to source estimation error and data measurement error', 'Fast convergence rate (efficient computation of second-order derivative) ', 'Highly automatic algorithm, minimum user interaction', 'Optimized workflows designed for various categories of seismic data'], body: 'Body text to be added.'},\n            { format: 'list', category: 'tech', id: 4, title: '3D RTM, QRTM & RTM ANGLE GATHERS (ISO/VTI/TTI)', list: ['AVO compliant offset and angle gathers, Finite-difference Q-RTM (patent pending) which is 5x faster than traditional methods', 'Affordable high frequency (e.g. 50Hz) 3D RTM angle gather', 'Output every location in offset or angle domain', 'Azimuthal Imaging'], body: 'Body text to be added.'},\n        ],\n        publications:[\n            { format: 'list', category: 'publication', id: 3, title: 'Research & Development', list: ['40% of all capital is committed to R&D', 'Customer Focused Results - technology roadmap is adaptable', 'Rapid Technology Implementation - i.e. AVO Compliant RTM Gathers, Q', 'Nimble; technology roadmap adaptable to clients\\' needs'], body: 'Body text to be added.'},\n        ], // publications\n        numTechItems: 8, // number of tech entries to be displayed per page\n        page: 0,\n        title: 'TECHNOLOGIES'\n    }\n    \n    // convert numTechItems at a time news entries into NewsItem components\n    formatTech = () => {\n        var techJSX = [];\n        let i = this.state.page * this.state.numTechItems;\n        while(i<this.state.technology.length && i<this.state.page*this.state.numTechItems + 6){\n            let dict = this.state.technology[i];\n            techJSX.push(<TechnologyItem info={dict}/>)\n            i++;\n        }\n        if(techJSX.length > 0)\n            return techJSX;\n        else\n            return <span class=\"txt subheading ml-2 mt-2\">Nothing on this page.</span>\n    }\n\n    incrementPage = () => {\n        const page = this.state.page + 1;\n        this.setState({page});\n    }\n\n    incrementPageTwice = () => {\n        const page = this.state.page + 2;\n        this.setState({page});\n    }\n    \n    decrementPage = () => {\n        const page = this.state.page - 1;\n        this.setState({page});\n    }\n    \n    goFirstPage = () => {\n        const page = 0;\n        this.setState({page});\n    }\n\n    goLastPage = () => {\n        const page = Math.ceil(this.state.technology.length/this.state.numTechItems) - 1;\n        this.setState({page});\n    }\n\n    reset = () => {\n        this.setState({technology: this.state.publications});\n    }\n\n    applyFilter = (num) => {\n        var newTitle = '';\n        var newList = [];\n        if(num==0) {\n            newTitle = 'PUBLICATIONS';\n            newList = this.state.publications;\n        }\n        else if(num==1) {\n            newTitle = 'TECHNOLOGIES';\n            newList = this.state.technology;\n        }\n        this.setState({title: newTitle, technology: newList, page: 0})\n    }\n\n    render() { \n        var techFormatted = this.formatTech();\n        return ( \n            <div>\n            <div class=\"container-fluid border border-grey\" style={{width: '80vw'}}>\n                <div class=\"row\">\n                    <div class=\"col-2 border-right text-center\">\n                        <br/>\n                       <span class=\"txt heading\" style={{fontSize: 25, fontWeight: 'bold', color: '#1cb7e6'}}>Filter by:</span>\n                       <br/>\n                       <Link class=\"subheading\" onClick={() => this.applyFilter(0)} style={{fontSize: 20, color: 'black'}}>Publications</Link><br/>\n                       <Link class=\"subheading\" onClick={() => this.applyFilter(1)} style={{fontSize: 20, color: 'black'}}>Technologies</Link><br/>\n                    </div>\n                    <div class=\"col-8\">\n                        <h1 class=\"heading ml-2 mt-1\" style={{fontSize: 35, color: '#585c5e'}}>{this.state.title}</h1>\n                        <div class=\"container-fluid\" style={{width: '50vw'}}>\n                            <div class=\"row\">\n                                {techFormatted.length >= 1 + this.state.page*this.state.numTechItems ? techFormatted[0 + this.state.page*this.state.numTechItems] : null}\n                                {techFormatted.length >= 2 + this.state.page*this.state.numTechItems ? techFormatted[1 + this.state.page*this.state.numTechItems] : null}\n                            </div>\n                            <div class=\"row\">\n                                {techFormatted.length >= 3 + this.state.page*this.state.numTechItems ? techFormatted[2 + this.state.page*this.state.numTechItems] : null}\n                                {techFormatted.length >= 4 + this.state.page*this.state.numTechItems ? techFormatted[3 + this.state.page*this.state.numTechItems] : null}\n                            </div>\n                            <div class=\"row\">\n                                {techFormatted.length >= 5 + this.state.page*this.state.numTechItems ? techFormatted[4 + this.state.page*this.state.numTechItems] : null}\n                                {techFormatted.length >= 6 + this.state.page*this.state.numTechItems ? techFormatted[5 + this.state.page*this.state.numTechItems] : null}\n                            </div>\n                            <div class=\"row\">\n                                {techFormatted.length >= 7 + this.state.page*this.state.numTechItems ? techFormatted[6 + this.state.page*this.state.numTechItems] : null}\n                                {techFormatted.length >= 8 + this.state.page*this.state.numTechItems ? techFormatted[7 + this.state.page*this.state.numTechItems] : null}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-center\">\n                <PageNav decrementPage={this.decrementPage} \n                        incrementPage={this.incrementPage}\n                        goFirstPage={this.goFirstPage}\n                        goLastPage={this.goLastPage}\n                        page={this.state.page}\n                        incrementPageTwice={this.incrementPageTwice}\n                        lastPage={Math.ceil(this.state.technology.length/this.state.numTechItems)}/>\n            </div>\n            <Footer/>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}